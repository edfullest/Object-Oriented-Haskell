-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------

state 49 contains 2 shift/reduce conflicts.

terminal "if" is unused
terminal "else" is unused
terminal "case" is unused
terminal "otherwise" is unused
terminal "for" is unused
terminal "while" is unused
terminal "read" is unused
terminal "display" is unused
terminal "+" is unused
terminal "-" is unused
terminal "*" is unused
terminal "/" is unused
terminal "++" is unused
terminal "--" is unused
terminal "^" is unused
terminal "!" is unused
terminal "True" is unused
terminal "False" is unused
terminal ">" is unused
terminal "<" is unused
terminal ">=" is unused
terminal "<=" is unused
terminal "==" is unused
terminal "!=" is unused
terminal "&&" is unused
terminal "||" is unused
terminal "(" is unused
terminal ")" is unused
terminal "Integer" is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_ooh -> Program                              (0)
	Program -> FunctionsVariablesClasses "main" Block   (1)
	FunctionsVariablesClasses ->                       (2)
	FunctionsVariablesClasses -> FunctionsVariablesClasses Function   (3)
	FunctionsVariablesClasses -> FunctionsVariablesClasses Variable   (4)
	FunctionsVariablesClasses -> FunctionsVariablesClasses Class   (5)
	Function -> var_identifier "=>" TypeFuncReturn "::" TypeFuncParams var_identifier Params Block   (6)
	Function -> var_identifier "=>" TypeFuncReturn Block   (7)
	Params ->                                          (8)
	Params -> Params "->" TypeFuncParams var_identifier   (9)
	TypeFuncReturn -> Primitive ClosingBracketsNoIdentifier   (10)
	TypeFuncReturn -> class_identifier ClosingBracketsNoIdentifier   (11)
	TypeFuncReturn -> ListType                         (12)
	TypeFuncReturn -> "Nothing"                        (13)
	TypeFuncParams -> Primitive ClosingBracketsNoIdentifier   (14)
	TypeFuncParams -> class_identifier ClosingBracketsNoIdentifier   (15)
	TypeFuncParams -> ListType                         (16)
	ClosingBracketsNoIdentifier ->                     (17)
	ClosingBracketsNoIdentifier -> ClosingBracketsNoIdentifier "[" "]"   (18)
	Primitive -> "Int"                                 (19)
	Primitive -> "Double"                              (20)
	Primitive -> "Money"                               (21)
	Primitive -> "String"                              (22)
	Primitive -> "Bool"                                (23)
	Type -> Primitive ArrayIndexes                     (24)
	Type -> class_identifier ArrayIndexes              (25)
	ArrayIndexes ->                                    (26)
	ArrayIndexes -> ArrayIndexes "[" var_identifier "]"   (27)
	ArrayIndexes -> ArrayIndexes "[" integer_literal "]"   (28)
	ListType -> "List" "of" class_identifier           (29)
	ListType -> "List" "of" Primitive                  (30)
	Variable -> Type var_identifier VarIdentifiers ";"   (31)
	Variable -> Type var_identifier "=" LiteralOrVariable ";"   (32)
	Variable -> Type var_identifier "=" ArrayAssignment1D ";"   (33)
	Variable -> Type var_identifier "=" ArrayAssignment2D ";"   (34)
	Variable -> ListType var_identifier "=" ListAssignment ";"   (35)
	Variable -> ListType var_identifier ";"            (36)
	VarIdentifiers ->                                  (37)
	VarIdentifiers -> VarIdentifiers "," var_identifier   (38)
	ArrayAssignment1D -> "[" var_identifier Array1DAssignments "]"   (39)
	ArrayAssignment1D -> "[" integer_literal Array1DAssignments "]"   (40)
	ArrayAssignment1D -> "[" "]"                       (41)
	Array1DAssignments ->                              (42)
	Array1DAssignments -> Array1DAssignments "," integer_literal   (43)
	Array1DAssignments -> Array1DAssignments "," var_identifier   (44)
	ArrayAssignment2D -> "[" ArrayAssignment1D Array2DAssignments "]"   (45)
	Array2DAssignments ->                              (46)
	Array2DAssignments -> Array2DAssignments "," ArrayAssignment1D   (47)
	ListAssignment -> ArrayAssignment1D                (48)
	ListAssignment -> "[" integer_literal ".." integer_literal "]"   (49)
	Class -> "class" class_identifier ":" class_identifier ClassBlock   (50)
	Class -> "class" class_identifier ClassBlock       (51)
	ClassBlock -> "{" ClassAttributes ClassConstructor ClassFunctions "}"   (52)
	ClassAttributes ->                                 (53)
	ClassAttributes -> ClassAttributes ClassAttribute   (54)
	ClassAttribute -> "[+]" Type var_identifier ";"    (55)
	ClassAttribute -> "[+]" ListType var_identifier ";"   (56)
	ClassAttribute -> "[-]" Type var_identifier ";"    (57)
	ClassAttribute -> "[-]" ListType var_identifier ";"   (58)
	ClassFunctions ->                                  (59)
	ClassFunctions -> ClassFunctions ClassFunction     (60)
	ClassFunction -> "[+]" Function                    (61)
	ClassFunction -> "[-]" Function                    (62)
	ClassConstructor ->                                (63)
	ClassConstructor -> TypeFuncParams var_identifier Params Block   (64)
	LiteralOrVariable -> var_identifier                (65)
	LiteralOrVariable -> integer_literal               (66)
	LiteralOrVariable -> decimal_literal               (67)
	LiteralOrVariable -> string_literal                (68)
	Block -> "{" "}"                                   (69)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"="            { TEquals _ }
	","            { TComma _ }
	"if"           { TIf _ }
	"else"         { TElse _ }
	"case"         { TCase _ }
	"of"           { TOf _ }
	"otherwise"    { TOtherwise _ }
	"for"          { TFor _ }
	"while"        { TWhile _ }
	"read"         { TRead _ }
	"display"      { TDisplay _ }
	"+"            { TPlus _ }
	"-"            { TMinus _ }
	"*"            { TMultiply _ }
	"/"            { TDivide _ }
	"++"           { TPlusPlus _ }
	"--"           { TMinusMinus _ }
	"^"            { TPower _ }
	"!"            { TNot _ }
	"True"         { TTrue _ }
	"False"        { TTrue _ }
	">"            { TGreaterThan _ }
	"<"            { TLessThan _ }
	">="           { TGreaterEqualThan _ }
	"<="           { TLessEqualThan _ }
	"=="           { TDoubleEqual _ }
	"!="           { TNotEqual _ }
	"&&"           { TAnd _ }
	"||"           { TOr _ }
	"main"         { TMain _ }
	"class"        { TClass _ }
	":"            { TColon _ }
	"[+]"          { TPublic _ }
	"[-]"          { TPrivate _ }
	"=>"           { TEqualsRightArrow _ }
	"->"           { TDashRightArrow _ }
	"::"           { TDoubleColon _ }
	"["            { TLeftBracket _ }
	"]"            { TRightBracket _ }
	"List"         { TList _ }
	".."           { TDoublePoint _ }
	";"            { TSemiColon _ }
	"{"            { TRightBrace _ }
	"}"            { TLeftBrace _ }
	"("            { TLeftParen _ }
	")"            { TRightParen _ }
	"Int"          { TInt _ }
	"Integer"      { TInteger _ }
	"Double"       { TDouble _ }
	"Money"        { TMoney _ }
	"String"       { TString _ }
	"Bool"         { TBool _ }
	"Nothing"      { TString _ }
	decimal_literal{ TDecimalLiteral _ $$ }
	integer_literal{ TIntegerLiteral _ $$ }
	var_identifier { TVarIdent _ $$ }
	class_identifier{ TClassIdent _ $$ }
	string_literal { TStringLiteral _ $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_ooh      rule  0
	Program         rule  1
	FunctionsVariablesClasses rules 2, 3, 4, 5
	Function        rules 6, 7
	Params          rules 8, 9
	TypeFuncReturn  rules 10, 11, 12, 13
	TypeFuncParams  rules 14, 15, 16
	ClosingBracketsNoIdentifier rules 17, 18
	Primitive       rules 19, 20, 21, 22, 23
	Type            rules 24, 25
	ArrayIndexes    rules 26, 27, 28
	ListType        rules 29, 30
	Variable        rules 31, 32, 33, 34, 35, 36
	VarIdentifiers  rules 37, 38
	ArrayAssignment1D rules 39, 40, 41
	Array1DAssignments rules 42, 43, 44
	ArrayAssignment2D rule  45
	Array2DAssignments rules 46, 47
	ListAssignment  rules 48, 49
	Class           rules 50, 51
	ClassBlock      rule  52
	ClassAttributes rules 53, 54
	ClassAttribute  rules 55, 56, 57, 58
	ClassFunctions  rules 59, 60
	ClassFunction   rules 61, 62
	ClassConstructor rules 63, 64
	LiteralOrVariable rules 65, 66, 67, 68
	Block           rule  69

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	"main"         reduce using rule 2
	"class"        reduce using rule 2
	"List"         reduce using rule 2
	"Int"          reduce using rule 2
	"Double"       reduce using rule 2
	"Money"        reduce using rule 2
	"String"       reduce using rule 2
	"Bool"         reduce using rule 2
	var_identifier reduce using rule 2
	class_identifierreduce using rule 2

	Program        goto state 3
	FunctionsVariablesClassesgoto state 2

State 1



	FunctionsVariablesClassesgoto state 2

State 2

	Program -> FunctionsVariablesClasses . "main" Block    (rule 1)
	FunctionsVariablesClasses -> FunctionsVariablesClasses . Function    (rule 3)
	FunctionsVariablesClasses -> FunctionsVariablesClasses . Variable    (rule 4)
	FunctionsVariablesClasses -> FunctionsVariablesClasses . Class    (rule 5)

	"main"         shift, and enter state 10
	"class"        shift, and enter state 11
	"List"         shift, and enter state 12
	"Int"          shift, and enter state 13
	"Double"       shift, and enter state 14
	"Money"        shift, and enter state 15
	"String"       shift, and enter state 16
	"Bool"         shift, and enter state 17
	var_identifier shift, and enter state 18
	class_identifiershift, and enter state 19

	Function       goto state 4
	Primitive      goto state 5
	Type           goto state 6
	ListType       goto state 7
	Variable       goto state 8
	Class          goto state 9

State 3

	%start_ooh -> Program .                             (rule 0)

	%eof           accept


State 4

	FunctionsVariablesClasses -> FunctionsVariablesClasses Function .    (rule 3)

	"main"         reduce using rule 3
	"class"        reduce using rule 3
	"List"         reduce using rule 3
	"Int"          reduce using rule 3
	"Double"       reduce using rule 3
	"Money"        reduce using rule 3
	"String"       reduce using rule 3
	"Bool"         reduce using rule 3
	var_identifier reduce using rule 3
	class_identifierreduce using rule 3


State 5

	Type -> Primitive . ArrayIndexes                    (rule 24)

	"["            reduce using rule 26
	var_identifier reduce using rule 26

	ArrayIndexes   goto state 28

State 6

	Variable -> Type . var_identifier VarIdentifiers ";"    (rule 31)
	Variable -> Type . var_identifier "=" LiteralOrVariable ";"    (rule 32)
	Variable -> Type . var_identifier "=" ArrayAssignment1D ";"    (rule 33)
	Variable -> Type . var_identifier "=" ArrayAssignment2D ";"    (rule 34)

	var_identifier shift, and enter state 27


State 7

	Variable -> ListType . var_identifier "=" ListAssignment ";"    (rule 35)
	Variable -> ListType . var_identifier ";"           (rule 36)

	var_identifier shift, and enter state 26


State 8

	FunctionsVariablesClasses -> FunctionsVariablesClasses Variable .    (rule 4)

	"main"         reduce using rule 4
	"class"        reduce using rule 4
	"List"         reduce using rule 4
	"Int"          reduce using rule 4
	"Double"       reduce using rule 4
	"Money"        reduce using rule 4
	"String"       reduce using rule 4
	"Bool"         reduce using rule 4
	var_identifier reduce using rule 4
	class_identifierreduce using rule 4


State 9

	FunctionsVariablesClasses -> FunctionsVariablesClasses Class .    (rule 5)

	"main"         reduce using rule 5
	"class"        reduce using rule 5
	"List"         reduce using rule 5
	"Int"          reduce using rule 5
	"Double"       reduce using rule 5
	"Money"        reduce using rule 5
	"String"       reduce using rule 5
	"Bool"         reduce using rule 5
	var_identifier reduce using rule 5
	class_identifierreduce using rule 5


State 10

	Program -> FunctionsVariablesClasses "main" . Block    (rule 1)

	"{"            shift, and enter state 25

	Block          goto state 24

State 11

	Class -> "class" . class_identifier ":" class_identifier ClassBlock    (rule 50)
	Class -> "class" . class_identifier ClassBlock      (rule 51)

	class_identifiershift, and enter state 23


State 12

	ListType -> "List" . "of" class_identifier          (rule 29)
	ListType -> "List" . "of" Primitive                 (rule 30)

	"of"           shift, and enter state 22


State 13

	Primitive -> "Int" .                                (rule 19)

	"::"           reduce using rule 19
	"["            reduce using rule 19
	"{"            reduce using rule 19
	var_identifier reduce using rule 19


State 14

	Primitive -> "Double" .                             (rule 20)

	"::"           reduce using rule 20
	"["            reduce using rule 20
	"{"            reduce using rule 20
	var_identifier reduce using rule 20


State 15

	Primitive -> "Money" .                              (rule 21)

	"::"           reduce using rule 21
	"["            reduce using rule 21
	"{"            reduce using rule 21
	var_identifier reduce using rule 21


State 16

	Primitive -> "String" .                             (rule 22)

	"::"           reduce using rule 22
	"["            reduce using rule 22
	"{"            reduce using rule 22
	var_identifier reduce using rule 22


State 17

	Primitive -> "Bool" .                               (rule 23)

	"::"           reduce using rule 23
	"["            reduce using rule 23
	"{"            reduce using rule 23
	var_identifier reduce using rule 23


State 18

	Function -> var_identifier . "=>" TypeFuncReturn "::" TypeFuncParams var_identifier Params Block    (rule 6)
	Function -> var_identifier . "=>" TypeFuncReturn Block    (rule 7)

	"=>"           shift, and enter state 21


State 19

	Type -> class_identifier . ArrayIndexes             (rule 25)

	"["            reduce using rule 26
	var_identifier reduce using rule 26

	ArrayIndexes   goto state 20

State 20

	Type -> class_identifier ArrayIndexes .             (rule 25)
	ArrayIndexes -> ArrayIndexes . "[" var_identifier "]"    (rule 27)
	ArrayIndexes -> ArrayIndexes . "[" integer_literal "]"    (rule 28)

	"["            shift, and enter state 29
	var_identifier reduce using rule 25


State 21

	Function -> var_identifier "=>" . TypeFuncReturn "::" TypeFuncParams var_identifier Params Block    (rule 6)
	Function -> var_identifier "=>" . TypeFuncReturn Block    (rule 7)

	"List"         shift, and enter state 12
	"Int"          shift, and enter state 13
	"Double"       shift, and enter state 14
	"Money"        shift, and enter state 15
	"String"       shift, and enter state 16
	"Bool"         shift, and enter state 17
	"Nothing"      shift, and enter state 43
	class_identifiershift, and enter state 44

	TypeFuncReturn goto state 40
	Primitive      goto state 41
	ListType       goto state 42

State 22

	ListType -> "List" "of" . class_identifier          (rule 29)
	ListType -> "List" "of" . Primitive                 (rule 30)

	"Int"          shift, and enter state 13
	"Double"       shift, and enter state 14
	"Money"        shift, and enter state 15
	"String"       shift, and enter state 16
	"Bool"         shift, and enter state 17
	class_identifiershift, and enter state 39

	Primitive      goto state 38

State 23

	Class -> "class" class_identifier . ":" class_identifier ClassBlock    (rule 50)
	Class -> "class" class_identifier . ClassBlock      (rule 51)

	":"            shift, and enter state 36
	"{"            shift, and enter state 37

	ClassBlock     goto state 35

State 24

	Program -> FunctionsVariablesClasses "main" Block .    (rule 1)

	%eof           reduce using rule 1


State 25

	Block -> "{" . "}"                                  (rule 69)

	"}"            shift, and enter state 34


State 26

	Variable -> ListType var_identifier . "=" ListAssignment ";"    (rule 35)
	Variable -> ListType var_identifier . ";"           (rule 36)

	"="            shift, and enter state 32
	";"            shift, and enter state 33


State 27

	Variable -> Type var_identifier . VarIdentifiers ";"    (rule 31)
	Variable -> Type var_identifier . "=" LiteralOrVariable ";"    (rule 32)
	Variable -> Type var_identifier . "=" ArrayAssignment1D ";"    (rule 33)
	Variable -> Type var_identifier . "=" ArrayAssignment2D ";"    (rule 34)

	"="            shift, and enter state 31
	","            reduce using rule 37
	";"            reduce using rule 37

	VarIdentifiers goto state 30

State 28

	Type -> Primitive ArrayIndexes .                    (rule 24)
	ArrayIndexes -> ArrayIndexes . "[" var_identifier "]"    (rule 27)
	ArrayIndexes -> ArrayIndexes . "[" integer_literal "]"    (rule 28)

	"["            shift, and enter state 29
	var_identifier reduce using rule 24


State 29

	ArrayIndexes -> ArrayIndexes "[" . var_identifier "]"    (rule 27)
	ArrayIndexes -> ArrayIndexes "[" . integer_literal "]"    (rule 28)

	integer_literalshift, and enter state 64
	var_identifier shift, and enter state 65


State 30

	Variable -> Type var_identifier VarIdentifiers . ";"    (rule 31)
	VarIdentifiers -> VarIdentifiers . "," var_identifier    (rule 38)

	","            shift, and enter state 62
	";"            shift, and enter state 63


State 31

	Variable -> Type var_identifier "=" . LiteralOrVariable ";"    (rule 32)
	Variable -> Type var_identifier "=" . ArrayAssignment1D ";"    (rule 33)
	Variable -> Type var_identifier "=" . ArrayAssignment2D ";"    (rule 34)

	"["            shift, and enter state 57
	decimal_literalshift, and enter state 58
	integer_literalshift, and enter state 59
	var_identifier shift, and enter state 60
	string_literal shift, and enter state 61

	ArrayAssignment1Dgoto state 54
	ArrayAssignment2Dgoto state 55
	LiteralOrVariablegoto state 56

State 32

	Variable -> ListType var_identifier "=" . ListAssignment ";"    (rule 35)

	"["            shift, and enter state 53

	ArrayAssignment1Dgoto state 51
	ListAssignment goto state 52

State 33

	Variable -> ListType var_identifier ";" .           (rule 36)

	"main"         reduce using rule 36
	"class"        reduce using rule 36
	"List"         reduce using rule 36
	"Int"          reduce using rule 36
	"Double"       reduce using rule 36
	"Money"        reduce using rule 36
	"String"       reduce using rule 36
	"Bool"         reduce using rule 36
	var_identifier reduce using rule 36
	class_identifierreduce using rule 36


State 34

	Block -> "{" "}" .                                  (rule 69)

	"main"         reduce using rule 69
	"class"        reduce using rule 69
	"[+]"          reduce using rule 69
	"[-]"          reduce using rule 69
	"List"         reduce using rule 69
	"}"            reduce using rule 69
	"Int"          reduce using rule 69
	"Double"       reduce using rule 69
	"Money"        reduce using rule 69
	"String"       reduce using rule 69
	"Bool"         reduce using rule 69
	var_identifier reduce using rule 69
	class_identifierreduce using rule 69
	%eof           reduce using rule 69


State 35

	Class -> "class" class_identifier ClassBlock .      (rule 51)

	"main"         reduce using rule 51
	"class"        reduce using rule 51
	"List"         reduce using rule 51
	"Int"          reduce using rule 51
	"Double"       reduce using rule 51
	"Money"        reduce using rule 51
	"String"       reduce using rule 51
	"Bool"         reduce using rule 51
	var_identifier reduce using rule 51
	class_identifierreduce using rule 51


State 36

	Class -> "class" class_identifier ":" . class_identifier ClassBlock    (rule 50)

	class_identifiershift, and enter state 50


State 37

	ClassBlock -> "{" . ClassAttributes ClassConstructor ClassFunctions "}"    (rule 52)

	"[+]"          reduce using rule 53
	"[-]"          reduce using rule 53
	"List"         reduce using rule 53
	"}"            reduce using rule 53
	"Int"          reduce using rule 53
	"Double"       reduce using rule 53
	"Money"        reduce using rule 53
	"String"       reduce using rule 53
	"Bool"         reduce using rule 53
	class_identifierreduce using rule 53

	ClassAttributesgoto state 49

State 38

	ListType -> "List" "of" Primitive .                 (rule 30)

	"::"           reduce using rule 30
	"{"            reduce using rule 30
	var_identifier reduce using rule 30


State 39

	ListType -> "List" "of" class_identifier .          (rule 29)

	"::"           reduce using rule 29
	"{"            reduce using rule 29
	var_identifier reduce using rule 29


State 40

	Function -> var_identifier "=>" TypeFuncReturn . "::" TypeFuncParams var_identifier Params Block    (rule 6)
	Function -> var_identifier "=>" TypeFuncReturn . Block    (rule 7)

	"::"           shift, and enter state 48
	"{"            shift, and enter state 25

	Block          goto state 47

State 41

	TypeFuncReturn -> Primitive . ClosingBracketsNoIdentifier    (rule 10)

	"::"           reduce using rule 17
	"["            reduce using rule 17
	"{"            reduce using rule 17

	ClosingBracketsNoIdentifiergoto state 46

State 42

	TypeFuncReturn -> ListType .                        (rule 12)

	"::"           reduce using rule 12
	"{"            reduce using rule 12


State 43

	TypeFuncReturn -> "Nothing" .                       (rule 13)

	"::"           reduce using rule 13
	"{"            reduce using rule 13


State 44

	TypeFuncReturn -> class_identifier . ClosingBracketsNoIdentifier    (rule 11)

	"::"           reduce using rule 17
	"["            reduce using rule 17
	"{"            reduce using rule 17

	ClosingBracketsNoIdentifiergoto state 45

State 45

	TypeFuncReturn -> class_identifier ClosingBracketsNoIdentifier .    (rule 11)
	ClosingBracketsNoIdentifier -> ClosingBracketsNoIdentifier . "[" "]"    (rule 18)

	"::"           reduce using rule 11
	"["            shift, and enter state 89
	"{"            reduce using rule 11


State 46

	TypeFuncReturn -> Primitive ClosingBracketsNoIdentifier .    (rule 10)
	ClosingBracketsNoIdentifier -> ClosingBracketsNoIdentifier . "[" "]"    (rule 18)

	"::"           reduce using rule 10
	"["            shift, and enter state 89
	"{"            reduce using rule 10


State 47

	Function -> var_identifier "=>" TypeFuncReturn Block .    (rule 7)

	"main"         reduce using rule 7
	"class"        reduce using rule 7
	"[+]"          reduce using rule 7
	"[-]"          reduce using rule 7
	"List"         reduce using rule 7
	"}"            reduce using rule 7
	"Int"          reduce using rule 7
	"Double"       reduce using rule 7
	"Money"        reduce using rule 7
	"String"       reduce using rule 7
	"Bool"         reduce using rule 7
	var_identifier reduce using rule 7
	class_identifierreduce using rule 7


State 48

	Function -> var_identifier "=>" TypeFuncReturn "::" . TypeFuncParams var_identifier Params Block    (rule 6)

	"List"         shift, and enter state 12
	"Int"          shift, and enter state 13
	"Double"       shift, and enter state 14
	"Money"        shift, and enter state 15
	"String"       shift, and enter state 16
	"Bool"         shift, and enter state 17
	class_identifiershift, and enter state 87

	TypeFuncParams goto state 88
	Primitive      goto state 81
	ListType       goto state 82

State 49

	ClassBlock -> "{" ClassAttributes . ClassConstructor ClassFunctions "}"    (rule 52)
	ClassAttributes -> ClassAttributes . ClassAttribute    (rule 54)

	"[+]"          shift, and enter state 85
			(reduce using rule 63)

	"[-]"          shift, and enter state 86
			(reduce using rule 63)

	"List"         shift, and enter state 12
	"}"            reduce using rule 63
	"Int"          shift, and enter state 13
	"Double"       shift, and enter state 14
	"Money"        shift, and enter state 15
	"String"       shift, and enter state 16
	"Bool"         shift, and enter state 17
	class_identifiershift, and enter state 87

	TypeFuncParams goto state 80
	Primitive      goto state 81
	ListType       goto state 82
	ClassAttribute goto state 83
	ClassConstructorgoto state 84

State 50

	Class -> "class" class_identifier ":" class_identifier . ClassBlock    (rule 50)

	"{"            shift, and enter state 37

	ClassBlock     goto state 79

State 51

	ListAssignment -> ArrayAssignment1D .               (rule 48)

	";"            reduce using rule 48


State 52

	Variable -> ListType var_identifier "=" ListAssignment . ";"    (rule 35)

	";"            shift, and enter state 78


State 53

	ArrayAssignment1D -> "[" . var_identifier Array1DAssignments "]"    (rule 39)
	ArrayAssignment1D -> "[" . integer_literal Array1DAssignments "]"    (rule 40)
	ArrayAssignment1D -> "[" . "]"                      (rule 41)
	ListAssignment -> "[" . integer_literal ".." integer_literal "]"    (rule 49)

	"]"            shift, and enter state 71
	integer_literalshift, and enter state 77
	var_identifier shift, and enter state 73


State 54

	Variable -> Type var_identifier "=" ArrayAssignment1D . ";"    (rule 33)

	";"            shift, and enter state 76


State 55

	Variable -> Type var_identifier "=" ArrayAssignment2D . ";"    (rule 34)

	";"            shift, and enter state 75


State 56

	Variable -> Type var_identifier "=" LiteralOrVariable . ";"    (rule 32)

	";"            shift, and enter state 74


State 57

	ArrayAssignment1D -> "[" . var_identifier Array1DAssignments "]"    (rule 39)
	ArrayAssignment1D -> "[" . integer_literal Array1DAssignments "]"    (rule 40)
	ArrayAssignment1D -> "[" . "]"                      (rule 41)
	ArrayAssignment2D -> "[" . ArrayAssignment1D Array2DAssignments "]"    (rule 45)

	"["            shift, and enter state 70
	"]"            shift, and enter state 71
	integer_literalshift, and enter state 72
	var_identifier shift, and enter state 73

	ArrayAssignment1Dgoto state 69

State 58

	LiteralOrVariable -> decimal_literal .              (rule 67)

	";"            reduce using rule 67


State 59

	LiteralOrVariable -> integer_literal .              (rule 66)

	";"            reduce using rule 66


State 60

	LiteralOrVariable -> var_identifier .               (rule 65)

	";"            reduce using rule 65


State 61

	LiteralOrVariable -> string_literal .               (rule 68)

	";"            reduce using rule 68


State 62

	VarIdentifiers -> VarIdentifiers "," . var_identifier    (rule 38)

	var_identifier shift, and enter state 68


State 63

	Variable -> Type var_identifier VarIdentifiers ";" .    (rule 31)

	"main"         reduce using rule 31
	"class"        reduce using rule 31
	"List"         reduce using rule 31
	"Int"          reduce using rule 31
	"Double"       reduce using rule 31
	"Money"        reduce using rule 31
	"String"       reduce using rule 31
	"Bool"         reduce using rule 31
	var_identifier reduce using rule 31
	class_identifierreduce using rule 31


State 64

	ArrayIndexes -> ArrayIndexes "[" integer_literal . "]"    (rule 28)

	"]"            shift, and enter state 67


State 65

	ArrayIndexes -> ArrayIndexes "[" var_identifier . "]"    (rule 27)

	"]"            shift, and enter state 66


State 66

	ArrayIndexes -> ArrayIndexes "[" var_identifier "]" .    (rule 27)

	"["            reduce using rule 27
	var_identifier reduce using rule 27


State 67

	ArrayIndexes -> ArrayIndexes "[" integer_literal "]" .    (rule 28)

	"["            reduce using rule 28
	var_identifier reduce using rule 28


State 68

	VarIdentifiers -> VarIdentifiers "," var_identifier .    (rule 38)

	","            reduce using rule 38
	";"            reduce using rule 38


State 69

	ArrayAssignment2D -> "[" ArrayAssignment1D . Array2DAssignments "]"    (rule 45)

	","            reduce using rule 46
	"]"            reduce using rule 46

	Array2DAssignmentsgoto state 103

State 70

	ArrayAssignment1D -> "[" . var_identifier Array1DAssignments "]"    (rule 39)
	ArrayAssignment1D -> "[" . integer_literal Array1DAssignments "]"    (rule 40)
	ArrayAssignment1D -> "[" . "]"                      (rule 41)

	"]"            shift, and enter state 71
	integer_literalshift, and enter state 72
	var_identifier shift, and enter state 73


State 71

	ArrayAssignment1D -> "[" "]" .                      (rule 41)

	","            reduce using rule 41
	"]"            reduce using rule 41
	";"            reduce using rule 41


State 72

	ArrayAssignment1D -> "[" integer_literal . Array1DAssignments "]"    (rule 40)

	","            reduce using rule 42
	"]"            reduce using rule 42

	Array1DAssignmentsgoto state 100

State 73

	ArrayAssignment1D -> "[" var_identifier . Array1DAssignments "]"    (rule 39)

	","            reduce using rule 42
	"]"            reduce using rule 42

	Array1DAssignmentsgoto state 102

State 74

	Variable -> Type var_identifier "=" LiteralOrVariable ";" .    (rule 32)

	"main"         reduce using rule 32
	"class"        reduce using rule 32
	"List"         reduce using rule 32
	"Int"          reduce using rule 32
	"Double"       reduce using rule 32
	"Money"        reduce using rule 32
	"String"       reduce using rule 32
	"Bool"         reduce using rule 32
	var_identifier reduce using rule 32
	class_identifierreduce using rule 32


State 75

	Variable -> Type var_identifier "=" ArrayAssignment2D ";" .    (rule 34)

	"main"         reduce using rule 34
	"class"        reduce using rule 34
	"List"         reduce using rule 34
	"Int"          reduce using rule 34
	"Double"       reduce using rule 34
	"Money"        reduce using rule 34
	"String"       reduce using rule 34
	"Bool"         reduce using rule 34
	var_identifier reduce using rule 34
	class_identifierreduce using rule 34


State 76

	Variable -> Type var_identifier "=" ArrayAssignment1D ";" .    (rule 33)

	"main"         reduce using rule 33
	"class"        reduce using rule 33
	"List"         reduce using rule 33
	"Int"          reduce using rule 33
	"Double"       reduce using rule 33
	"Money"        reduce using rule 33
	"String"       reduce using rule 33
	"Bool"         reduce using rule 33
	var_identifier reduce using rule 33
	class_identifierreduce using rule 33


State 77

	ArrayAssignment1D -> "[" integer_literal . Array1DAssignments "]"    (rule 40)
	ListAssignment -> "[" integer_literal . ".." integer_literal "]"    (rule 49)

	","            reduce using rule 42
	"]"            reduce using rule 42
	".."           shift, and enter state 101

	Array1DAssignmentsgoto state 100

State 78

	Variable -> ListType var_identifier "=" ListAssignment ";" .    (rule 35)

	"main"         reduce using rule 35
	"class"        reduce using rule 35
	"List"         reduce using rule 35
	"Int"          reduce using rule 35
	"Double"       reduce using rule 35
	"Money"        reduce using rule 35
	"String"       reduce using rule 35
	"Bool"         reduce using rule 35
	var_identifier reduce using rule 35
	class_identifierreduce using rule 35


State 79

	Class -> "class" class_identifier ":" class_identifier ClassBlock .    (rule 50)

	"main"         reduce using rule 50
	"class"        reduce using rule 50
	"List"         reduce using rule 50
	"Int"          reduce using rule 50
	"Double"       reduce using rule 50
	"Money"        reduce using rule 50
	"String"       reduce using rule 50
	"Bool"         reduce using rule 50
	var_identifier reduce using rule 50
	class_identifierreduce using rule 50


State 80

	ClassConstructor -> TypeFuncParams . var_identifier Params Block    (rule 64)

	var_identifier shift, and enter state 99


State 81

	TypeFuncParams -> Primitive . ClosingBracketsNoIdentifier    (rule 14)

	"["            reduce using rule 17
	var_identifier reduce using rule 17

	ClosingBracketsNoIdentifiergoto state 98

State 82

	TypeFuncParams -> ListType .                        (rule 16)

	var_identifier reduce using rule 16


State 83

	ClassAttributes -> ClassAttributes ClassAttribute .    (rule 54)

	"[+]"          reduce using rule 54
	"[-]"          reduce using rule 54
	"List"         reduce using rule 54
	"}"            reduce using rule 54
	"Int"          reduce using rule 54
	"Double"       reduce using rule 54
	"Money"        reduce using rule 54
	"String"       reduce using rule 54
	"Bool"         reduce using rule 54
	class_identifierreduce using rule 54


State 84

	ClassBlock -> "{" ClassAttributes ClassConstructor . ClassFunctions "}"    (rule 52)

	"[+]"          reduce using rule 59
	"[-]"          reduce using rule 59
	"}"            reduce using rule 59

	ClassFunctions goto state 97

State 85

	ClassAttribute -> "[+]" . Type var_identifier ";"    (rule 55)
	ClassAttribute -> "[+]" . ListType var_identifier ";"    (rule 56)

	"List"         shift, and enter state 12
	"Int"          shift, and enter state 13
	"Double"       shift, and enter state 14
	"Money"        shift, and enter state 15
	"String"       shift, and enter state 16
	"Bool"         shift, and enter state 17
	class_identifiershift, and enter state 19

	Primitive      goto state 5
	Type           goto state 95
	ListType       goto state 96

State 86

	ClassAttribute -> "[-]" . Type var_identifier ";"    (rule 57)
	ClassAttribute -> "[-]" . ListType var_identifier ";"    (rule 58)

	"List"         shift, and enter state 12
	"Int"          shift, and enter state 13
	"Double"       shift, and enter state 14
	"Money"        shift, and enter state 15
	"String"       shift, and enter state 16
	"Bool"         shift, and enter state 17
	class_identifiershift, and enter state 19

	Primitive      goto state 5
	Type           goto state 93
	ListType       goto state 94

State 87

	TypeFuncParams -> class_identifier . ClosingBracketsNoIdentifier    (rule 15)

	"["            reduce using rule 17
	var_identifier reduce using rule 17

	ClosingBracketsNoIdentifiergoto state 92

State 88

	Function -> var_identifier "=>" TypeFuncReturn "::" TypeFuncParams . var_identifier Params Block    (rule 6)

	var_identifier shift, and enter state 91


State 89

	ClosingBracketsNoIdentifier -> ClosingBracketsNoIdentifier "[" . "]"    (rule 18)

	"]"            shift, and enter state 90


State 90

	ClosingBracketsNoIdentifier -> ClosingBracketsNoIdentifier "[" "]" .    (rule 18)

	"::"           reduce using rule 18
	"["            reduce using rule 18
	"{"            reduce using rule 18
	var_identifier reduce using rule 18


State 91

	Function -> var_identifier "=>" TypeFuncReturn "::" TypeFuncParams var_identifier . Params Block    (rule 6)

	"->"           reduce using rule 8
	"{"            reduce using rule 8

	Params         goto state 119

State 92

	TypeFuncParams -> class_identifier ClosingBracketsNoIdentifier .    (rule 15)
	ClosingBracketsNoIdentifier -> ClosingBracketsNoIdentifier . "[" "]"    (rule 18)

	"["            shift, and enter state 89
	var_identifier reduce using rule 15


State 93

	ClassAttribute -> "[-]" Type . var_identifier ";"    (rule 57)

	var_identifier shift, and enter state 118


State 94

	ClassAttribute -> "[-]" ListType . var_identifier ";"    (rule 58)

	var_identifier shift, and enter state 117


State 95

	ClassAttribute -> "[+]" Type . var_identifier ";"    (rule 55)

	var_identifier shift, and enter state 116


State 96

	ClassAttribute -> "[+]" ListType . var_identifier ";"    (rule 56)

	var_identifier shift, and enter state 115


State 97

	ClassBlock -> "{" ClassAttributes ClassConstructor ClassFunctions . "}"    (rule 52)
	ClassFunctions -> ClassFunctions . ClassFunction    (rule 60)

	"[+]"          shift, and enter state 112
	"[-]"          shift, and enter state 113
	"}"            shift, and enter state 114

	ClassFunction  goto state 111

State 98

	TypeFuncParams -> Primitive ClosingBracketsNoIdentifier .    (rule 14)
	ClosingBracketsNoIdentifier -> ClosingBracketsNoIdentifier . "[" "]"    (rule 18)

	"["            shift, and enter state 89
	var_identifier reduce using rule 14


State 99

	ClassConstructor -> TypeFuncParams var_identifier . Params Block    (rule 64)

	"->"           reduce using rule 8
	"{"            reduce using rule 8

	Params         goto state 110

State 100

	ArrayAssignment1D -> "[" integer_literal Array1DAssignments . "]"    (rule 40)
	Array1DAssignments -> Array1DAssignments . "," integer_literal    (rule 43)
	Array1DAssignments -> Array1DAssignments . "," var_identifier    (rule 44)

	","            shift, and enter state 106
	"]"            shift, and enter state 109


State 101

	ListAssignment -> "[" integer_literal ".." . integer_literal "]"    (rule 49)

	integer_literalshift, and enter state 108


State 102

	ArrayAssignment1D -> "[" var_identifier Array1DAssignments . "]"    (rule 39)
	Array1DAssignments -> Array1DAssignments . "," integer_literal    (rule 43)
	Array1DAssignments -> Array1DAssignments . "," var_identifier    (rule 44)

	","            shift, and enter state 106
	"]"            shift, and enter state 107


State 103

	ArrayAssignment2D -> "[" ArrayAssignment1D Array2DAssignments . "]"    (rule 45)
	Array2DAssignments -> Array2DAssignments . "," ArrayAssignment1D    (rule 47)

	","            shift, and enter state 104
	"]"            shift, and enter state 105


State 104

	Array2DAssignments -> Array2DAssignments "," . ArrayAssignment1D    (rule 47)

	"["            shift, and enter state 70

	ArrayAssignment1Dgoto state 132

State 105

	ArrayAssignment2D -> "[" ArrayAssignment1D Array2DAssignments "]" .    (rule 45)

	";"            reduce using rule 45


State 106

	Array1DAssignments -> Array1DAssignments "," . integer_literal    (rule 43)
	Array1DAssignments -> Array1DAssignments "," . var_identifier    (rule 44)

	integer_literalshift, and enter state 130
	var_identifier shift, and enter state 131


State 107

	ArrayAssignment1D -> "[" var_identifier Array1DAssignments "]" .    (rule 39)

	","            reduce using rule 39
	"]"            reduce using rule 39
	";"            reduce using rule 39


State 108

	ListAssignment -> "[" integer_literal ".." integer_literal . "]"    (rule 49)

	"]"            shift, and enter state 129


State 109

	ArrayAssignment1D -> "[" integer_literal Array1DAssignments "]" .    (rule 40)

	","            reduce using rule 40
	"]"            reduce using rule 40
	";"            reduce using rule 40


State 110

	Params -> Params . "->" TypeFuncParams var_identifier    (rule 9)
	ClassConstructor -> TypeFuncParams var_identifier Params . Block    (rule 64)

	"->"           shift, and enter state 121
	"{"            shift, and enter state 25

	Block          goto state 128

State 111

	ClassFunctions -> ClassFunctions ClassFunction .    (rule 60)

	"[+]"          reduce using rule 60
	"[-]"          reduce using rule 60
	"}"            reduce using rule 60


State 112

	ClassFunction -> "[+]" . Function                   (rule 61)

	var_identifier shift, and enter state 18

	Function       goto state 127

State 113

	ClassFunction -> "[-]" . Function                   (rule 62)

	var_identifier shift, and enter state 18

	Function       goto state 126

State 114

	ClassBlock -> "{" ClassAttributes ClassConstructor ClassFunctions "}" .    (rule 52)

	"main"         reduce using rule 52
	"class"        reduce using rule 52
	"List"         reduce using rule 52
	"Int"          reduce using rule 52
	"Double"       reduce using rule 52
	"Money"        reduce using rule 52
	"String"       reduce using rule 52
	"Bool"         reduce using rule 52
	var_identifier reduce using rule 52
	class_identifierreduce using rule 52


State 115

	ClassAttribute -> "[+]" ListType var_identifier . ";"    (rule 56)

	";"            shift, and enter state 125


State 116

	ClassAttribute -> "[+]" Type var_identifier . ";"    (rule 55)

	";"            shift, and enter state 124


State 117

	ClassAttribute -> "[-]" ListType var_identifier . ";"    (rule 58)

	";"            shift, and enter state 123


State 118

	ClassAttribute -> "[-]" Type var_identifier . ";"    (rule 57)

	";"            shift, and enter state 122


State 119

	Function -> var_identifier "=>" TypeFuncReturn "::" TypeFuncParams var_identifier Params . Block    (rule 6)
	Params -> Params . "->" TypeFuncParams var_identifier    (rule 9)

	"->"           shift, and enter state 121
	"{"            shift, and enter state 25

	Block          goto state 120

State 120

	Function -> var_identifier "=>" TypeFuncReturn "::" TypeFuncParams var_identifier Params Block .    (rule 6)

	"main"         reduce using rule 6
	"class"        reduce using rule 6
	"[+]"          reduce using rule 6
	"[-]"          reduce using rule 6
	"List"         reduce using rule 6
	"}"            reduce using rule 6
	"Int"          reduce using rule 6
	"Double"       reduce using rule 6
	"Money"        reduce using rule 6
	"String"       reduce using rule 6
	"Bool"         reduce using rule 6
	var_identifier reduce using rule 6
	class_identifierreduce using rule 6


State 121

	Params -> Params "->" . TypeFuncParams var_identifier    (rule 9)

	"List"         shift, and enter state 12
	"Int"          shift, and enter state 13
	"Double"       shift, and enter state 14
	"Money"        shift, and enter state 15
	"String"       shift, and enter state 16
	"Bool"         shift, and enter state 17
	class_identifiershift, and enter state 87

	TypeFuncParams goto state 133
	Primitive      goto state 81
	ListType       goto state 82

State 122

	ClassAttribute -> "[-]" Type var_identifier ";" .    (rule 57)

	"[+]"          reduce using rule 57
	"[-]"          reduce using rule 57
	"List"         reduce using rule 57
	"}"            reduce using rule 57
	"Int"          reduce using rule 57
	"Double"       reduce using rule 57
	"Money"        reduce using rule 57
	"String"       reduce using rule 57
	"Bool"         reduce using rule 57
	class_identifierreduce using rule 57


State 123

	ClassAttribute -> "[-]" ListType var_identifier ";" .    (rule 58)

	"[+]"          reduce using rule 58
	"[-]"          reduce using rule 58
	"List"         reduce using rule 58
	"}"            reduce using rule 58
	"Int"          reduce using rule 58
	"Double"       reduce using rule 58
	"Money"        reduce using rule 58
	"String"       reduce using rule 58
	"Bool"         reduce using rule 58
	class_identifierreduce using rule 58


State 124

	ClassAttribute -> "[+]" Type var_identifier ";" .    (rule 55)

	"[+]"          reduce using rule 55
	"[-]"          reduce using rule 55
	"List"         reduce using rule 55
	"}"            reduce using rule 55
	"Int"          reduce using rule 55
	"Double"       reduce using rule 55
	"Money"        reduce using rule 55
	"String"       reduce using rule 55
	"Bool"         reduce using rule 55
	class_identifierreduce using rule 55


State 125

	ClassAttribute -> "[+]" ListType var_identifier ";" .    (rule 56)

	"[+]"          reduce using rule 56
	"[-]"          reduce using rule 56
	"List"         reduce using rule 56
	"}"            reduce using rule 56
	"Int"          reduce using rule 56
	"Double"       reduce using rule 56
	"Money"        reduce using rule 56
	"String"       reduce using rule 56
	"Bool"         reduce using rule 56
	class_identifierreduce using rule 56


State 126

	ClassFunction -> "[-]" Function .                   (rule 62)

	"[+]"          reduce using rule 62
	"[-]"          reduce using rule 62
	"}"            reduce using rule 62


State 127

	ClassFunction -> "[+]" Function .                   (rule 61)

	"[+]"          reduce using rule 61
	"[-]"          reduce using rule 61
	"}"            reduce using rule 61


State 128

	ClassConstructor -> TypeFuncParams var_identifier Params Block .    (rule 64)

	"[+]"          reduce using rule 64
	"[-]"          reduce using rule 64
	"}"            reduce using rule 64


State 129

	ListAssignment -> "[" integer_literal ".." integer_literal "]" .    (rule 49)

	";"            reduce using rule 49


State 130

	Array1DAssignments -> Array1DAssignments "," integer_literal .    (rule 43)

	","            reduce using rule 43
	"]"            reduce using rule 43


State 131

	Array1DAssignments -> Array1DAssignments "," var_identifier .    (rule 44)

	","            reduce using rule 44
	"]"            reduce using rule 44


State 132

	Array2DAssignments -> Array2DAssignments "," ArrayAssignment1D .    (rule 47)

	","            reduce using rule 47
	"]"            reduce using rule 47


State 133

	Params -> Params "->" TypeFuncParams . var_identifier    (rule 9)

	var_identifier shift, and enter state 134


State 134

	Params -> Params "->" TypeFuncParams var_identifier .    (rule 9)

	"->"           reduce using rule 9
	"{"            reduce using rule 9


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 70
Number of terminals: 58
Number of non-terminals: 28
Number of states: 135
