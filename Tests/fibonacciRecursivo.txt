fibo => Int :: Int n{
    Int i,k, result;
    if (n == 0){
        return 0;
    }

    if (n == 1){
        return 1;
    }
    return fibo(n - 1) + fibo(n - 2);
}

Int i,j,k,l;
Money m;
Bool b;
main{
    i = fibo(12);
    String s;
    Int [10][10] arr;
    Int kokooo = 20000000;
    m = 2 * 30.0 - 2.2222 - 1000 + 100 - 1 - 100 - 2 / 10 / 200 / 2000.0 * 200;
    b = ((3 - 5 - 100 - 200 * 9000 / 100 + (200 - 100 - 10 - 1) * 2 + (1 + 2 * 8 / 2 / 2 / 2))^2 + k + 5 * 3 + l + i + 1 * 5) == 2;
    b = ( (2 == 2)  && (1 == 1) && ( ( (1 + 1) * 4 ) == 2^4) );
    s = "Hola" + " Perro " + s + ("wassup" + "perro") + s;
    m = k * ((2.0 + 5.0)^(-3.0)) + 7.0;
    k = -17921 ^ 10; 
    s = "1" + "2" + "3" + "4" + "5";
    for z in (1..10){
        Integer lolo;
        if (i > k){
            Int jeje;
            jeje = 1 + 2 + 3 + 9000;
            String soso;
        }
        else{
            s = "hola perro";
            if (i == 1 && i == 2){
                s = "perro";
                Money ko;
            }
        }
    }

    b = True && True && (True || False || (True && False)) && b;
}
